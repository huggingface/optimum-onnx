name: ONNX Runtime / Python - Test

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  UV_SYSTEM_PYTHON: true
  UV_TORCH_BACKEND: auto
  TRANSFORMERS_IS_CI: true
  HF_HUB_READ_TOKEN: ${{ secrets.HF_HUB_READ_TOKEN }}

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9]
        runs-on: [ubuntu-22.04]
        transformers_version: [latest, 4.36.*, 4.45.*]
        test_file:
          [
            test_decoder.py,
            test_diffusion.py,
            test_modeling.py,
            test_optimization.py,
            test_quantization.py,
            test_seq2seq.py,
            test_timm.py,
            test_utils.py,
          ]

    runs-on: ${{ matrix.runs-on }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          pip install --upgrade pip uv
          uv pip install .[tests,onnxruntime]

      - name: Install diffusers for transformers ${{ matrix.transformers-version }}
        run: |
          if [ "${{ matrix.transformers_version }}" == '4.36.*' ]; then
            uv pip install "diffusers<0.32.0"
          elif [ "${{ matrix.transformers_version }}" == '4.45.*' ]; then
            uv pip install "diffusers<0.33.0"
          else
            uv pip install diffusers
          fi

      - name: Install transformers ${{ matrix.transformers-version }}
        run: |
          if [ "${{ matrix.transformers_version }}" == '4.36.*' ]; then
            uv pip install "transformers==4.36.*" "pytest<8.0.0"
          elif [ "${{ matrix.transformers_version }}" == '4.45.*' ]; then
            uv pip install "transformers==4.45.*"
          elif [ "${{ matrix.transformers_version }}" != 'latest' ]; then
            uv pip install "transformers==${{ matrix.transformers_version }}"            
          fi

      - name: Test with pytest
        run: |
          pytest tests/onnxruntime/${{ matrix.test_file }} -vvvv -n auto
